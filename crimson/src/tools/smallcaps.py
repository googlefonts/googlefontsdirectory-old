import fontforge

f = fontforge.open("Crimson-Roman.sfd")

chars = [
"zero",
"one",
"two",
"three",
"four",
"five",
"six",
"seven",
"eight",
"nine",

"exclam",
"quotedbl",
"numbersign",
"dollar",
"percent",
"ampersand",
"quotesingle",
"parenleft",
"parenright",
"asterisk",
"plus",
"comma",
"hyphen",
"period",
"slash",

"colon",
"semicolon",
"less",
"equal",
"greater",
"question",
"at",

"a",
"b",
"c",
"d",
"e",
"f",
"g",
"h",
"i",
"j",
"k",
"l",
"m",
"n",
"o",
"p",
"q",
"r",
"s",
"t",
"u",
"v",
"w",
"x",
"y",
"z",

"bracketleft",
"backslash",
"bracketright",
"asciicircum",

"braceleft",
"bar",
"braceright",

"asciitilde",

"exclamdown",
"cent",
"sterling",
"yen",
"brokenbar",
"section",

"copyright",
"ordfeminine",
"guillemotleft",
"guillemotright",
"registered",
"degree",
"paragraph",
"ordmasculine",
"guillemotright",
"questiondown",

"agrave",
"aacute",
"acircumflex",
"atilde",
"adieresis",
"aring",
"ae",
"ccedilla",
"egrave",
"eacute",
"ecircumflex",
"edieresis",
"igrave",
"iacute",
"icircumflex",
"idieresis",
"eth",
"ntilde",
"ograve",
"oacute",
"ocircumflex",
"otilde",
"odieresis",
"multiply",
"oslash",
"ugrave",
"uacute",
"ucircumflex",
"udieresis",
"yacute",
"thorn",
"germandbls",
"divide",

"amacron",
"abreve",
"aogonek",
"cacute",
"ccircumflex",
"cdotaccent",
"ccaron",
"dcaron",
"dcroat",
"emacron",
"ebreve",
"edotaccent",
"eogonek",
"ecaron",
"gcircumflex",
"gbreve",
"gdotaccent",
"gcommaaccent",
"hcircumflex",
"hbar",
"itilde",
"imacron",
"ibreve",
"iogonek",
"Idotaccent",
"dotlessi",
"ij",
"jcircumflex",
"kcommaaccent",
"kgreenlandic",
"lacute",
"lcommaaccent",
"lcaron",
"ldot",
"lslash",
"nacute",
"ncommaaccent",
"ncaron",
"eng",
"omacron",
"obreve",
"ohungarumlaut",
"oe",
"racute",
"rcommaaccent",
"rcaron",
"sacute",
"scircumflex",
"scedilla",
"scaron",
"uni0163", #tcommaaccent
"tcaron",
"tbar",
"utilde",
"umacron",
"ubreve",
"uring",
"uhungarumlaut",
"uogonek",
"wcircumflex",
"ycircumflex",
"ydieresis",
"zacute",
"zdotaccent",
"zcaron",

#pinyin: vowels with carons

"uni01CE",
"uni01D0",
"uni01D2",
"uni01D4",
"uni01D6",
"uni01D8",
"uni01DA",
"uni01DC",

"uni01E3",

"aringacute",
"aeacute",
"oslashacute",

"uni0219",
"uni021B",

"uni0233"
]

for char in chars:
    newChar = f.createChar(-1, char + ".sc")
    newChar.build()
    if not newChar.isWorthOutputting():
        print char
        newChar.addReference(char)

f.save("Crimson-Roman.sfd")
