# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;
languagesystem latn dflt;
languagesystem grek dflt;
languagesystem cyrl dflt;
languagesystem latn TRK;
languagesystem latn MOL;
languagesystem latn ROM;
languagesystem latn PLK;
languagesystem latn CAT;

feature aalt {
# automatic
feature locl;
feature subs;
feature sinf;
feature sups;
feature numr;
feature dnom;
feature frac;
feature ordn;
feature lnum;
feature onum;
feature calt;
feature c2sc;
feature smcp;
feature case;
} aalt;
feature locl {
# automatic
script latn;
language TAT;
sub i by idotaccent;
language TRK;
sub i by idotaccent;
language MOL;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language ROM;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language KAZ;
sub i by idotaccent;
language PLK;
sub Cacute by Cacute.loclPLK;
sub Nacute by Nacute.loclPLK;
sub Oacute by Oacute.loclPLK;
sub Sacute by Sacute.loclPLK;
sub Zacute by Zacute.loclPLK;
sub cacute by cacute.loclPLK;
sub nacute by nacute.loclPLK;
sub oacute by oacute.loclPLK;
sub sacute by sacute.loclPLK;
sub zacute by zacute.loclPLK;
sub acute by acute.loclPLK;
language AZE;
sub i by idotaccent;
language CAT;
sub  l' periodcentered' l by ldot;
sub  L' periodcentered' L by Ldot;
language CRT;
sub i by idotaccent;
} locl;
feature subs {
# automatic
sub zero by zero.subs;
sub one by one.subs;
sub two by two.subs;
sub three by three.subs;
sub four by four.subs;
sub five by five.subs;
sub six by six.subs;
sub seven by seven.subs;
sub eight by eight.subs;
sub nine by nine.subs;
} subs;
feature sinf {
# automatic
sub zero by zero.subs;
sub one by one.subs;
sub two by two.subs;
sub three by three.subs;
sub four by four.subs;
sub five by five.subs;
sub six by six.subs;
sub seven by seven.subs;
sub eight by eight.subs;
sub nine by nine.subs;
} sinf;
feature sups {
# automatic
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub zero by zero.sups;
sub four by four.sups;
sub five by five.sups;
sub six by six.sups;
sub seven by seven.sups;
sub eight by eight.sups;
sub nine by nine.sups;
} sups;
feature numr {
# automatic
sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
} numr;
feature dnom {
# automatic
sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
} dnom;
feature frac {
# automatic
lookup FRAC {
	sub slash by fraction;
} FRAC;
lookup HOCH {
	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
} HOCH;
lookup TIEF {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
} TIEF;
} frac;
feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
} ordn;
feature lnum {
# automatic
sub zero by zero.lf;
sub one by one.lf;
sub two by two.lf;
sub three by three.lf;
sub four by four.lf;
sub five by five.lf;
sub six by six.lf;
sub seven by seven.lf;
sub eight by eight.lf;
sub nine by nine.lf;
} lnum;
feature onum {
# automatic
sub zero.lf by zero;
sub one.lf by one;
sub two.lf by two;
sub three.lf by three;
sub four.lf by four;
sub five.lf by five;
sub six.lf by six;
sub seven.lf by seven;
sub eight.lf by eight;
sub nine.lf by nine;
} onum;
feature calt {
#Arrows
  sub hyphen greater by arrowright;
  sub less hyphen by arrowleft;
  sub less hyphen greater by arrowboth;
  sub hyphen asciicircum by arrowup;
  sub hyphen asciitilde by arrowdown;
  sub asciicircum backslash by arrowupleft;
  sub slash asciicircum by arrowupright;
  sub backslash asciitilde by arrowdownright;
  sub asciitilde slash by arrowdownleft;
} calt;
feature c2sc {
# automatic
sub A by a.smcp;
sub Aacute by aacute.smcp;
sub Abreve by abreve.smcp;
sub Acircumflex by acircumflex.smcp;
sub Adieresis by adieresis.smcp;
sub Agrave by agrave.smcp;
sub Amacron by amacron.smcp;
sub Aogonek by aogonek.smcp;
sub Aring by aring.smcp;
sub Atilde by atilde.smcp;
sub AE by ae.smcp;
sub B by b.smcp;
sub C by c.smcp;
sub Cacute by cacute.smcp;
sub Ccaron by ccaron.smcp;
sub Ccedilla by ccedilla.smcp;
sub Ccircumflex by ccircumflex.smcp;
sub Cdotaccent by cdotaccent.smcp;
sub D by d.smcp;
sub Eth by eth.smcp;
sub Dcaron by dcaron.smcp;
sub Dcroat by dcroat.smcp;
sub E by e.smcp;
sub Eacute by eacute.smcp;
sub Ebreve by ebreve.smcp;
sub Ecaron by ecaron.smcp;
sub Ecircumflex by ecircumflex.smcp;
sub Edieresis by edieresis.smcp;
sub Edotaccent by edotaccent.smcp;
sub Egrave by egrave.smcp;
sub Emacron by emacron.smcp;
sub Eogonek by eogonek.smcp;
sub F by f.smcp;
sub G by g.smcp;
sub Gacute by gacute.smcp;
sub Gbreve by gbreve.smcp;
sub Gcircumflex by gcircumflex.smcp;
sub Gcommaaccent by gcommaaccent.smcp;
sub Gdotaccent by gdotaccent.smcp;
sub H by h.smcp;
sub Hbar by hbar.smcp;
sub Hcircumflex by hcircumflex.smcp;
sub I by i.smcp;
sub IJ by ij.smcp;
sub Iacute by iacute.smcp;
sub Ibreve by ibreve.smcp;
sub Icircumflex by icircumflex.smcp;
sub Idieresis by idieresis.smcp;
sub Idotaccent by idotaccent.smcp;
sub Igrave by igrave.smcp;
sub Imacron by imacron.smcp;
sub Iogonek by iogonek.smcp;
sub Itilde by itilde.smcp;
sub J by j.smcp;
sub Jcircumflex by jcircumflex.smcp;
sub K by k.smcp;
sub Kcommaaccent by kcommaaccent.smcp;
sub L by l.smcp;
sub Lacute by lacute.smcp;
sub Lcaron by lcaron.smcp;
sub Lcommaaccent by lcommaaccent.smcp;
sub Ldot by ldot.smcp;
sub Lslash by lslash.smcp;
sub M by m.smcp;
sub N by n.smcp;
sub Nacute by nacute.smcp;
sub Ncaron by ncaron.smcp;
sub Ncommaaccent by ncommaaccent.smcp;
sub Eng by eng.smcp;
sub Ntilde by ntilde.smcp;
sub O by o.smcp;
sub Oacute by oacute.smcp;
sub Obreve by obreve.smcp;
sub Ocircumflex by ocircumflex.smcp;
sub Odieresis by odieresis.smcp;
sub Ograve by ograve.smcp;
sub Ohungarumlaut by ohungarumlaut.smcp;
sub Omacron by omacron.smcp;
sub Oslash by oslash.smcp;
sub Otilde by otilde.smcp;
sub OE by oe.smcp;
sub P by p.smcp;
sub Thorn by thorn.smcp;
sub Q by q.smcp;
sub R by r.smcp;
sub Racute by racute.smcp;
sub Rcaron by rcaron.smcp;
sub Rcommaaccent by rcommaaccent.smcp;
sub S by s.smcp;
sub Sacute by sacute.smcp;
sub Scaron by scaron.smcp;
sub Scedilla by scedilla.smcp;
sub Scircumflex by scircumflex.smcp;
sub Scommaaccent by scommaaccent.smcp;
sub Germandbls by germandbls.smcp;
sub T by t.smcp;
sub Tbar by tbar.smcp;
sub Tcaron by tcaron.smcp;
sub Tcedilla by tcedilla.smcp;
sub Tcommaaccent by tcommaaccent.smcp;
sub U by u.smcp;
sub Uacute by uacute.smcp;
sub Ubreve by ubreve.smcp;
sub Ucircumflex by ucircumflex.smcp;
sub Udieresis by udieresis.smcp;
sub Ugrave by ugrave.smcp;
sub Uhungarumlaut by uhungarumlaut.smcp;
sub Umacron by umacron.smcp;
sub Uogonek by uogonek.smcp;
sub Uring by uring.smcp;
sub Utilde by utilde.smcp;
sub V by v.smcp;
sub W by w.smcp;
sub Wacute by wacute.smcp;
sub Wcircumflex by wcircumflex.smcp;
sub Wdieresis by wdieresis.smcp;
sub Wgrave by wgrave.smcp;
sub X by x.smcp;
sub Y by y.smcp;
sub Yacute by yacute.smcp;
sub Ycircumflex by ycircumflex.smcp;
sub Ydieresis by ydieresis.smcp;
sub Ygrave by ygrave.smcp;
sub Z by z.smcp;
sub Zacute by zacute.smcp;
sub Zcaron by zcaron.smcp;
sub Zdotaccent by zdotaccent.smcp;
sub Cacute.loclPLK by cacute.loclPLK.smcp;
sub Nacute.loclPLK by nacute.loclPLK.smcp;
sub Oacute.loclPLK by oacute.loclPLK.smcp;
sub Sacute.loclPLK by sacute.loclPLK.smcp;
sub Zacute.loclPLK by zacute.loclPLK.smcp;
sub A-cy by a-cy.smcp;
sub Be-cy by be-cy.smcp;
sub Ve-cy by ve-cy.smcp;
sub Ge-cy by ge-cy.smcp;
sub Gje-cy by gje-cy.smcp;
sub Gheupturn-cy by gheupturn-cy.smcp;
sub De-cy by de-cy.smcp;
sub Ie-cy by ie-cy.smcp;
sub Io-cy by io-cy.smcp;
sub Zhe-cy by zhe-cy.smcp;
sub Ze-cy by ze-cy.smcp;
sub Ii-cy by ii-cy.smcp;
sub Iigrave-cy by iigrave-cy.smcp;
sub Ka-cy by ka-cy.smcp;
sub Kje-cy by kje-cy.smcp;
sub El-cy by el-cy.smcp;
sub Em-cy by em-cy.smcp;
sub En-cy by en-cy.smcp;
sub O-cy by o-cy.smcp;
sub Pe-cy by pe-cy.smcp;
sub Er-cy by er-cy.smcp;
sub Es-cy by es-cy.smcp;
sub Te-cy by te-cy.smcp;
sub U-cy by u-cy.smcp;
sub Ushort-cy by ushort-cy.smcp;
sub Ef-cy by ef-cy.smcp;
sub Ha-cy by ha-cy.smcp;
sub Che-cy by che-cy.smcp;
sub Tse-cy by tse-cy.smcp;
sub Sha-cy by sha-cy.smcp;
sub Shcha-cy by shcha-cy.smcp;
sub Dzhe-cy by dzhe-cy.smcp;
sub Ia-cy by ia-cy.smcp;
sub Softsign-cy by softsign-cy.smcp;
sub Hardsign-cy by hardsign-cy.smcp;
sub Yeru-cy by yeru-cy.smcp;
sub Lje-cy by lje-cy.smcp;
sub Nje-cy by nje-cy.smcp;
sub Dze-cy by dze-cy.smcp;
sub E-cy by e-cy.smcp;
sub Ereversed-cy by ereversed-cy.smcp;
sub I-cy by i-cy.smcp;
sub Yi-cy by yi-cy.smcp;
sub Je-cy by je-cy.smcp;
sub Tshe-cy by tshe-cy.smcp;
sub Iu-cy by iu-cy.smcp;
sub Dje-cy by dje-cy.smcp;
sub braceleft by braceleft.smcp;
sub braceright by braceright.smcp;
sub bracketleft by bracketleft.smcp;
sub bracketright by bracketright.smcp;
sub bullet by bullet.smcp;
sub emdash by emdash.smcp;
sub endash by endash.smcp;
sub exclam by exclam.smcp;
sub exclamdown by exclamdown.smcp;
sub guillemotleft by guillemotleft.smcp;
sub guillemotright by guillemotright.smcp;
sub guilsinglleft by guilsinglleft.smcp;
sub guilsinglright by guilsinglright.smcp;
sub hyphen by hyphen.smcp;
sub parenleft by parenleft.smcp;
sub parenright by parenright.smcp;
sub periodcentered by periodcentered.smcp;
sub question by question.smcp;
sub questiondown by questiondown.smcp;
sub florin by florin.smcp;
sub ampersand by ampersand.smcp;
sub asciicircum by asciicircum.smcp;
sub asciitilde by asciitilde.smcp;
sub at by at.smcp;
sub cent by cent.smcp;
sub currency by currency.smcp;
sub dollar by dollar.smcp;
sub euro by euro.smcp;
sub paragraph by paragraph.smcp;
sub rupeeIndian by rupeeIndian.smcp;
sub section by section.smcp;
sub sterling by sterling.smcp;
sub whitesquare by whitesquare.smcp;
sub yen by yen.smcp;
sub acute by acute.smcp;
sub breve by breve.smcp;
sub caron by caron.smcp;
sub cedilla by cedilla.smcp;
sub circumflex by circumflex.smcp;
sub commaaccent by commaaccent.smcp;
sub dieresis by dieresis.smcp;
sub dotaccent by dotaccent.smcp;
sub grave by grave.smcp;
sub hungarumlaut by hungarumlaut.smcp;
sub acute.loclPLK by acute.loclPLK.smcp;
sub macron by macron.smcp;
sub ogonek by ogonek.smcp;
sub ring by ring.smcp;
sub tilde by tilde.smcp;
sub breve-cy by breve-cy.smcp;
sub blacksquare by blacksquare.smcp;
sub hacek by hacek.smcp;
} c2sc;
feature smcp {
# automatic
sub a by a.smcp;
sub aacute by aacute.smcp;
sub abreve by abreve.smcp;
sub acircumflex by acircumflex.smcp;
sub adieresis by adieresis.smcp;
sub agrave by agrave.smcp;
sub amacron by amacron.smcp;
sub aogonek by aogonek.smcp;
sub aring by aring.smcp;
sub atilde by atilde.smcp;
sub ae by ae.smcp;
sub b by b.smcp;
sub c by c.smcp;
sub cacute by cacute.smcp;
sub ccaron by ccaron.smcp;
sub ccedilla by ccedilla.smcp;
sub ccircumflex by ccircumflex.smcp;
sub cdotaccent by cdotaccent.smcp;
sub d by d.smcp;
sub eth by eth.smcp;
sub dcaron by dcaron.smcp;
sub dcroat by dcroat.smcp;
sub e by e.smcp;
sub eacute by eacute.smcp;
sub ebreve by ebreve.smcp;
sub ecaron by ecaron.smcp;
sub ecircumflex by ecircumflex.smcp;
sub edieresis by edieresis.smcp;
sub edotaccent by edotaccent.smcp;
sub egrave by egrave.smcp;
sub emacron by emacron.smcp;
sub eogonek by eogonek.smcp;
sub f by f.smcp;
sub g by g.smcp;
sub gacute by gacute.smcp;
sub gbreve by gbreve.smcp;
sub gcircumflex by gcircumflex.smcp;
sub gcommaaccent by gcommaaccent.smcp;
sub gdotaccent by gdotaccent.smcp;
sub h by h.smcp;
sub hbar by hbar.smcp;
sub hcircumflex by hcircumflex.smcp;
sub i by i.smcp;
sub iacute by iacute.smcp;
sub ibreve by ibreve.smcp;
sub icircumflex by icircumflex.smcp;
sub idieresis by idieresis.smcp;
sub idotaccent by idotaccent.smcp;
sub igrave by igrave.smcp;
sub ij by ij.smcp;
sub imacron by imacron.smcp;
sub iogonek by iogonek.smcp;
sub itilde by itilde.smcp;
sub j by j.smcp;
sub jcircumflex by jcircumflex.smcp;
sub k by k.smcp;
sub kcommaaccent by kcommaaccent.smcp;
sub l by l.smcp;
sub lacute by lacute.smcp;
sub lcaron by lcaron.smcp;
sub lcommaaccent by lcommaaccent.smcp;
sub ldot by ldot.smcp;
sub cacute.loclPLK by cacute.loclPLK.smcp;
sub nacute.loclPLK by nacute.loclPLK.smcp;
sub oacute.loclPLK by oacute.loclPLK.smcp;
sub sacute.loclPLK by sacute.loclPLK.smcp;
sub zacute.loclPLK by zacute.loclPLK.smcp;
sub lslash by lslash.smcp;
sub m by m.smcp;
sub n by n.smcp;
sub nacute by nacute.smcp;
sub ncaron by ncaron.smcp;
sub ncommaaccent by ncommaaccent.smcp;
sub eng by eng.smcp;
sub ntilde by ntilde.smcp;
sub o by o.smcp;
sub oacute by oacute.smcp;
sub obreve by obreve.smcp;
sub ocircumflex by ocircumflex.smcp;
sub odieresis by odieresis.smcp;
sub ograve by ograve.smcp;
sub ohungarumlaut by ohungarumlaut.smcp;
sub omacron by omacron.smcp;
sub oslash by oslash.smcp;
sub otilde by otilde.smcp;
sub oe by oe.smcp;
sub p by p.smcp;
sub thorn by thorn.smcp;
sub q by q.smcp;
sub r by r.smcp;
sub racute by racute.smcp;
sub rcaron by rcaron.smcp;
sub rcommaaccent by rcommaaccent.smcp;
sub s by s.smcp;
sub sacute by sacute.smcp;
sub scaron by scaron.smcp;
sub scedilla by scedilla.smcp;
sub scircumflex by scircumflex.smcp;
sub scommaaccent by scommaaccent.smcp;
sub germandbls by germandbls.smcp;
sub t by t.smcp;
sub tbar by tbar.smcp;
sub tcaron by tcaron.smcp;
sub tcedilla by tcedilla.smcp;
sub tcommaaccent by tcommaaccent.smcp;
sub u by u.smcp;
sub uacute by uacute.smcp;
sub ubreve by ubreve.smcp;
sub ucircumflex by ucircumflex.smcp;
sub udieresis by udieresis.smcp;
sub ugrave by ugrave.smcp;
sub uhungarumlaut by uhungarumlaut.smcp;
sub umacron by umacron.smcp;
sub uogonek by uogonek.smcp;
sub uring by uring.smcp;
sub utilde by utilde.smcp;
sub v by v.smcp;
sub w by w.smcp;
sub wacute by wacute.smcp;
sub wcircumflex by wcircumflex.smcp;
sub wdieresis by wdieresis.smcp;
sub wgrave by wgrave.smcp;
sub x by x.smcp;
sub y by y.smcp;
sub yacute by yacute.smcp;
sub ycircumflex by ycircumflex.smcp;
sub ydieresis by ydieresis.smcp;
sub ygrave by ygrave.smcp;
sub z by z.smcp;
sub zacute by zacute.smcp;
sub zcaron by zcaron.smcp;
sub zdotaccent by zdotaccent.smcp;
sub a-cy by a-cy.smcp;
sub be-cy by be-cy.smcp;
sub ve-cy by ve-cy.smcp;
sub ge-cy by ge-cy.smcp;
sub gje-cy by gje-cy.smcp;
sub gheupturn-cy by gheupturn-cy.smcp;
sub de-cy by de-cy.smcp;
sub ie-cy by ie-cy.smcp;
sub io-cy by io-cy.smcp;
sub zhe-cy by zhe-cy.smcp;
sub ze-cy by ze-cy.smcp;
sub ii-cy by ii-cy.smcp;
sub iishort-cy by iishort-cy.smcp;
sub iigrave-cy by iigrave-cy.smcp;
sub ka-cy by ka-cy.smcp;
sub kje-cy by kje-cy.smcp;
sub el-cy by el-cy.smcp;
sub em-cy by em-cy.smcp;
sub en-cy by en-cy.smcp;
sub o-cy by o-cy.smcp;
sub pe-cy by pe-cy.smcp;
sub er-cy by er-cy.smcp;
sub es-cy by es-cy.smcp;
sub te-cy by te-cy.smcp;
sub u-cy by u-cy.smcp;
sub ushort-cy by ushort-cy.smcp;
sub ef-cy by ef-cy.smcp;
sub ha-cy by ha-cy.smcp;
sub che-cy by che-cy.smcp;
sub tse-cy by tse-cy.smcp;
sub sha-cy by sha-cy.smcp;
sub shcha-cy by shcha-cy.smcp;
sub dzhe-cy by dzhe-cy.smcp;
sub softsign-cy by softsign-cy.smcp;
sub hardsign-cy by hardsign-cy.smcp;
sub yeru-cy by yeru-cy.smcp;
sub lje-cy by lje-cy.smcp;
sub nje-cy by nje-cy.smcp;
sub e-cy by e-cy.smcp;
sub ereversed-cy by ereversed-cy.smcp;
sub iu-cy by iu-cy.smcp;
sub ia-cy by ia-cy.smcp;
sub dje-cy by dje-cy.smcp;
sub dze-cy by dze-cy.smcp;
sub i-cy by i-cy.smcp;
sub yi-cy by yi-cy.smcp;
sub je-cy by je-cy.smcp;
sub tshe-cy by tshe-cy.smcp;
sub braceleft by braceleft.smcp;
sub braceright by braceright.smcp;
sub bracketleft by bracketleft.smcp;
sub bracketright by bracketright.smcp;
sub bullet by bullet.smcp;
sub emdash by emdash.smcp;
sub endash by endash.smcp;
sub exclam by exclam.smcp;
sub exclamdown by exclamdown.smcp;
sub guillemotleft by guillemotleft.smcp;
sub guillemotright by guillemotright.smcp;
sub guilsinglleft by guilsinglleft.smcp;
sub guilsinglright by guilsinglright.smcp;
sub hyphen by hyphen.smcp;
sub parenleft by parenleft.smcp;
sub parenright by parenright.smcp;
sub periodcentered by periodcentered.smcp;
sub question by question.smcp;
sub questiondown by questiondown.smcp;
sub florin by florin.smcp;
sub ampersand by ampersand.smcp;
sub asciicircum by asciicircum.smcp;
sub asciitilde by asciitilde.smcp;
sub at by at.smcp;
sub cent by cent.smcp;
sub currency by currency.smcp;
sub dollar by dollar.smcp;
sub euro by euro.smcp;
sub paragraph by paragraph.smcp;
sub rupeeIndian by rupeeIndian.smcp;
sub section by section.smcp;
sub sterling by sterling.smcp;
sub whitesquare by whitesquare.smcp;
sub yen by yen.smcp;
sub acute by acute.smcp;
sub breve by breve.smcp;
sub caron by caron.smcp;
sub cedilla by cedilla.smcp;
sub circumflex by circumflex.smcp;
sub commaaccent by commaaccent.smcp;
sub dieresis by dieresis.smcp;
sub dotaccent by dotaccent.smcp;
sub grave by grave.smcp;
sub hungarumlaut by hungarumlaut.smcp;
sub acute.loclPLK by acute.loclPLK.smcp;
sub macron by macron.smcp;
sub ogonek by ogonek.smcp;
sub ring by ring.smcp;
sub tilde by tilde.smcp;
sub breve-cy by breve-cy.smcp;
sub blacksquare by blacksquare.smcp;
sub hacek by hacek.smcp;
} smcp;
feature case {
# automatic
sub braceleft by braceleft.case;
sub braceright by braceright.case;
sub bracketleft by bracketleft.case;
sub bracketright by bracketright.case;
sub parenleft by parenleft.case;
sub parenright by parenright.case;
sub emdash by emdash.case;
sub endash by endash.case;
sub hyphen by hyphen.case;
sub guillemotleft by guillemotleft.case;
sub guillemotright by guillemotright.case;
sub guilsinglleft by guilsinglleft.case;
sub guilsinglright by guilsinglright.case;
sub bullet by bullet.case;
sub exclamdown by exclamdown.case;
sub periodcentered by periodcentered.case;
sub questiondown by questiondown.case;
sub asciitilde by asciitilde.case;
sub whitesquare by whitesquare.case;
sub asciicircum by asciicircum.case;
sub at by at.case;
sub acute by acute.case;
sub breve by breve.case;
sub caron by caron.case;
sub cedilla by cedilla.case;
sub circumflex by circumflex.case;
sub dieresis by dieresis.case;
sub dotaccent by dotaccent.case;
sub grave by grave.case;
sub hungarumlaut by hungarumlaut.case;
sub acute.loclPLK by acute.loclPLK.case;
sub macron by macron.case;
sub ogonek by ogonek.case;
sub ring by ring.case;
sub tilde by tilde.case;
sub commaaccent by commaaccent.case;
sub breve-cy by breve-cy.case;
sub blacksquare by blacksquare.case;
sub hacek by hacek.case;
sub zero by zero.lf;
sub one by one.lf;
sub two by two.lf;
sub three by three.lf;
sub four by four.lf;
sub five by five.lf;
sub six by six.lf;
sub seven by seven.lf;
sub eight by eight.lf;
sub nine by nine.lf;
} case;
feature dlig {
# automatic
sub c t by c_t;
sub s p by s_p;
sub s t by s_t;
} dlig;
feature liga {
# automatic
sub f f i by f_f_i;
sub f f l by f_f_l;
sub f f b by f_f_b.liga;
sub f f h by f_f_h.liga;
sub f f j by f_f_j.liga;
sub f f k by f_f_k.liga;
sub f f by f_f;
sub f idieresis by f_idieresis.liga;
sub f igrave by f_igrave.liga;
sub T h by T_h.liga;
sub f b by f_b.liga;
sub f h by f_h.liga;
sub f j by f_j.liga;
sub f k by f_k.liga;
sub f i by fi;
sub f l by fl;
} liga;
feature cpsp {
pos @Uppercase <20 0 20 0>;
} cpsp;
